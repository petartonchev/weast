!function (t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("node-fetch")) : "function" == typeof define && define.amd ? define(["node-fetch"], e) : "object" == typeof exports ? exports.stocks = e(require("node-fetch")) : t.stocks = e(t["node-fetch"])
}(this, function (t) {
    return function (t) {
        var e = {};

        function o(i) {
            if (e[i]) return e[i].exports;
            var r = e[i] = {i: i, l: !1, exports: {}};
            return t[i].call(r.exports, r, r.exports, o), r.l = !0, r.exports
        }

        return o.m = t, o.c = e, o.d = function (t, e, i) {
            o.o(t, e) || Object.defineProperty(t, e, {configurable: !1, enumerable: !0, get: i})
        }, o.n = function (t) {
            var e = t && t.__esModule ? function () {
                return t.default
            } : function () {
                return t
            };
            return o.d(e, "a", e), e
        }, o.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }, o.p = "", o(o.s = 0)
    }([function (t, e, o) {
        var i;

        function r(t) {
            this.apiKey = t
        }

        i = "undefined" == typeof window ? o(1) : window.fetch, r.prototype = {
            DEFAULT_URL: "https://www.alphavantage.co/query?",
            API_KEY_URL: "https://www.alphavantage.co/support/#api-key",
            INTERVALS: ["1min", "5min", "15min", "30min", "60min", "daily", "weekly", "monthly"],
            PERFORMANCES: ["real-time", "1day", "5day", "1month", "3month", "year-to-date", "1year", "3year", "5year", "10year"],
            _createUrl: function (t) {
                t.apikey = this.apiKey;
                var e = Object.keys(t).map(e => `${e}=${t[e]}`).join("&");
                return this.DEFAULT_URL + e
            },
            _doRequest: function (t) {
                return void 0 === this.apiKey && this._throw(0, "error"), new Promise((e, o) => {
                    var r = this._createUrl(t);
                    i(r).then(function (t) {
                        return t.json()
                    }).then(function (t) {
                        void 0 !== t["Error Message"] && this._throw(9, "error"), e(t)
                    })
                })
            },
            _throw: function (t, e) {
                if ("error" === e) throw new Error(`${t}: ${this.MESSAGES[t]}`);
                "warning" === e && console.warn(`${t}: ${this.MESSAGES[t]}`)
            },
            _checkOptions: function (t, e) {
                void 0 === t ? this._throw(1, "error") : void 0 === t.symbol ? this._throw(2, "error") : void 0 !== t.interval && this.INTERVALS.includes(t.interval) ? void 0 !== t.start && void 0 !== t.amount && this._throw(4, "error") : this._throw(3, "error"), void 0 === t.amount && void 0 === t.start && this._throw(8, "warning"), "object" == typeof t.start && void 0 === t.end && (this._throw(10, "warning"), t.end = Date.now()), "technical" === e && (void 0 === t.indicator ? this._throw(5, "error") : void 0 === t.time_period && this._throw(6, "error"))
            },
            _convertData: function (t, e) {
                var o = Object.keys(t).find(t => -1 !== t.indexOf("Time Series") || -1 !== t.indexOf("Technical"));
                t = t[o];
                var i = [];
                for (o in t) {
                    if (void 0 !== e && i.length === e) break;
                    let n = {};
                    for (var r in t[o]) {
                        n[r.replace(/.+. /, "")] = Number(t[o][r])
                    }
                    n.date = new Date(Date.parse(o) + 6e4 * (240 - (new Date).getTimezoneOffset())), i.push(n)
                }
                return i
            },
            _getBetween: function (t, e, o) {
                return t.filter(t => e <= t.date && t.date <= o)
            },
            timeSeries: async function (t = {}) {
                if (this._checkOptions(t, "timeseries"), this.INTERVALS.slice(0, 5).includes(t.interval)) {
                    var e = t.interval;
                    t.interval = "intraday"
                }
                var o = {function: `TIME_SERIES_${t.interval}`, symbol: t.symbol, outputsize: "full"};
                "intraday" === t.interval && (o.interval = e), this.INTERVALS.indexOf(t.interval) <= 5 && t.amount <= 100 && (o.outputsize = "compact");
                var i = await this._doRequest(o), r = this._convertData(i, t.amount);
                return void 0 !== t.start && (r = this._getBetween(r, t.start, t.end)), r
            },
            technicalIndicator: async function (t = {}) {
                this._checkOptions(t, "technical");
                var e = {function: t.indicator, symbol: t.symbol, interval: t.interval, time_period: t.time_period},
                    o = await this._doRequest(e), i = this._convertData(o, t.amount);
                return void 0 !== t.start && (i = this._getBetween(i, t.start, t.end)), i
            },
            sectorPerformance: async function (t = {}) {
                void 0 !== t.timespan && this.PERFORMANCES.includes(t.timespan) || this._throw(7, "error");
                var e = await this._doRequest({function: "SECTOR"}), o = Object.keys(e).find(e => {
                    return e.replace(/ /g, "").toLowerCase().includes(t.timespan)
                });
                for (var i in e = e[o]) e[i] = parseFloat(e[i]);
                return e
            }
        }, r.prototype.MESSAGES = {
            0: `You must first claim your API Key at ${r.prototype.API_KEY_URL}`,
            1: "No options specified!",
            2: "No `symbol` option specified!",
            3: "No (correct) 'interval' option specified, please set to any of the " + `following: ${r.prototype.INTERVALS.join(", ")}`,
            4: "Only 'start'-'end' OR 'amount' can be specified!",
            5: "No 'indicator' option specified!",
            6: "No 'time_period' option specified!",
            7: "No (correct) 'interval' option specified, please set to any of the " + `following: ${r.prototype.PERFORMANCES.join(", ")}`,
            8: "No 'amount' option specified, returning maximum amount of datapoints",
            9: "An error occured during the API request. Please create an issue at https://github.com/wagenaartje/stocks/issues with your code",
            10: "'start' specified, but 'end' not specified. Using today's date as end date!"
        }, "undefined" == typeof window ? t.exports = r : window.Stocks = r
    }, function (e, o) {
        e.exports = t
    }])
});
